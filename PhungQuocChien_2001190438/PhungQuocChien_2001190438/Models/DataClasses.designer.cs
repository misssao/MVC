#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhungQuocChien_2001190438.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNongTraiTayBac")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDDH(ChiTietDDH instance);
    partial void UpdateChiTietDDH(ChiTietDDH instance);
    partial void DeleteChiTietDDH(ChiTietDDH instance);
    partial void InsertTinh(Tinh instance);
    partial void UpdateTinh(Tinh instance);
    partial void DeleteTinh(Tinh instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertDonDatHang(DonDatHang instance);
    partial void UpdateDonDatHang(DonDatHang instance);
    partial void DeleteDonDatHang(DonDatHang instance);
    partial void InsertGiaoHang(GiaoHang instance);
    partial void UpdateGiaoHang(GiaoHang instance);
    partial void DeleteGiaoHang(GiaoHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoai(Loai instance);
    partial void UpdateLoai(Loai instance);
    partial void DeleteLoai(Loai instance);
    partial void InsertNongSan(NongSan instance);
    partial void UpdateNongSan(NongSan instance);
    partial void DeleteNongSan(NongSan instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLNongTraiTayBacConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDDH> ChiTietDDHs
		{
			get
			{
				return this.GetTable<ChiTietDDH>();
			}
		}
		
		public System.Data.Linq.Table<Tinh> Tinhs
		{
			get
			{
				return this.GetTable<Tinh>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHang> DonDatHangs
		{
			get
			{
				return this.GetTable<DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<GiaoHang> GiaoHangs
		{
			get
			{
				return this.GetTable<GiaoHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<Loai> Loais
		{
			get
			{
				return this.GetTable<Loai>();
			}
		}
		
		public System.Data.Linq.Table<NongSan> NongSans
		{
			get
			{
				return this.GetTable<NongSan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDDH")]
	public partial class ChiTietDDH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDDH;
		
		private string _idSP;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
		private EntityRef<NongSan> _NongSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDDHChanging(int value);
    partial void OnidDDHChanged();
    partial void OnidSPChanging(string value);
    partial void OnidSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietDDH()
		{
			this._DonDatHang = default(EntityRef<DonDatHang>);
			this._NongSan = default(EntityRef<NongSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDDH
		{
			get
			{
				return this._idDDH;
			}
			set
			{
				if ((this._idDDH != value))
				{
					if (this._DonDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDDHChanging(value);
					this.SendPropertyChanging();
					this._idDDH = value;
					this.SendPropertyChanged("idDDH");
					this.OnidDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idSP
		{
			get
			{
				return this._idSP;
			}
			set
			{
				if ((this._idSP != value))
				{
					if (this._NongSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSPChanging(value);
					this.SendPropertyChanging();
					this._idSP = value;
					this.SendPropertyChanged("idSP");
					this.OnidSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_ChiTietDDH", Storage="_DonDatHang", ThisKey="idDDH", OtherKey="idDDH", IsForeignKey=true)]
		public DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.ChiTietDDHs.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDDHs.Add(this);
						this._idDDH = value.idDDH;
					}
					else
					{
						this._idDDH = default(int);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NongSan_ChiTietDDH", Storage="_NongSan", ThisKey="idSP", OtherKey="idSP", IsForeignKey=true)]
		public NongSan NongSan
		{
			get
			{
				return this._NongSan.Entity;
			}
			set
			{
				NongSan previousValue = this._NongSan.Entity;
				if (((previousValue != value) 
							|| (this._NongSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NongSan.Entity = null;
						previousValue.ChiTietDDHs.Remove(this);
					}
					this._NongSan.Entity = value;
					if ((value != null))
					{
						value.ChiTietDDHs.Add(this);
						this._idSP = value.idSP;
					}
					else
					{
						this._idSP = default(string);
					}
					this.SendPropertyChanged("NongSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tinh")]
	public partial class Tinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinh;
		
		private string _TenTinh;
		
		private EntitySet<GiaoHang> _GiaoHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhChanging(int value);
    partial void OnMaTinhChanged();
    partial void OnTenTinhChanging(string value);
    partial void OnTenTinhChanged();
    #endregion
		
		public Tinh()
		{
			this._GiaoHangs = new EntitySet<GiaoHang>(new Action<GiaoHang>(this.attach_GiaoHangs), new Action<GiaoHang>(this.detach_GiaoHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinh
		{
			get
			{
				return this._MaTinh;
			}
			set
			{
				if ((this._MaTinh != value))
				{
					this.OnMaTinhChanging(value);
					this.SendPropertyChanging();
					this._MaTinh = value;
					this.SendPropertyChanged("MaTinh");
					this.OnMaTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinh", DbType="NVarChar(MAX)")]
		public string TenTinh
		{
			get
			{
				return this._TenTinh;
			}
			set
			{
				if ((this._TenTinh != value))
				{
					this.OnTenTinhChanging(value);
					this.SendPropertyChanging();
					this._TenTinh = value;
					this.SendPropertyChanged("TenTinh");
					this.OnTenTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tinh_GiaoHang", Storage="_GiaoHangs", ThisKey="MaTinh", OtherKey="MaTinh")]
		public EntitySet<GiaoHang> GiaoHangs
		{
			get
			{
				return this._GiaoHangs;
			}
			set
			{
				this._GiaoHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiaoHangs(GiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.Tinh = this;
		}
		
		private void detach_GiaoHangs(GiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.Tinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMuc;
		
		private string _TenDanhMuc;
		
		private EntitySet<Loai> _Loais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucChanging(int value);
    partial void OnMaDanhMucChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
		
		public DanhMuc()
		{
			this._Loais = new EntitySet<Loai>(new Action<Loai>(this.attach_Loais), new Action<Loai>(this.detach_Loais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhMuc
		{
			get
			{
				return this._MaDanhMuc;
			}
			set
			{
				if ((this._MaDanhMuc != value))
				{
					this.OnMaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMuc = value;
					this.SendPropertyChanged("MaDanhMuc");
					this.OnMaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(MAX)")]
		public string TenDanhMuc
		{
			get
			{
				return this._TenDanhMuc;
			}
			set
			{
				if ((this._TenDanhMuc != value))
				{
					this.OnTenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMuc = value;
					this.SendPropertyChanged("TenDanhMuc");
					this.OnTenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Loai", Storage="_Loais", ThisKey="MaDanhMuc", OtherKey="MaDanhMuc")]
		public EntitySet<Loai> Loais
		{
			get
			{
				return this._Loais;
			}
			set
			{
				this._Loais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loais(Loai entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_Loais(Loai entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHang")]
	public partial class DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDDH;
		
		private System.Nullable<int> _idKhachHang;
		
		private System.Nullable<System.DateTime> _NgayDatHang;
		
		private string _HinhThucGiaoHang;
		
		private string _GhiChu;
		
		private EntitySet<ChiTietDDH> _ChiTietDDHs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDDHChanging(int value);
    partial void OnidDDHChanged();
    partial void OnidKhachHangChanging(System.Nullable<int> value);
    partial void OnidKhachHangChanged();
    partial void OnNgayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatHangChanged();
    partial void OnHinhThucGiaoHangChanging(string value);
    partial void OnHinhThucGiaoHangChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DonDatHang()
		{
			this._ChiTietDDHs = new EntitySet<ChiTietDDH>(new Action<ChiTietDDH>(this.attach_ChiTietDDHs), new Action<ChiTietDDH>(this.detach_ChiTietDDHs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDDH
		{
			get
			{
				return this._idDDH;
			}
			set
			{
				if ((this._idDDH != value))
				{
					this.OnidDDHChanging(value);
					this.SendPropertyChanging();
					this._idDDH = value;
					this.SendPropertyChanged("idDDH");
					this.OnidDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKhachHang", DbType="Int")]
		public System.Nullable<int> idKhachHang
		{
			get
			{
				return this._idKhachHang;
			}
			set
			{
				if ((this._idKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidKhachHangChanging(value);
					this.SendPropertyChanging();
					this._idKhachHang = value;
					this.SendPropertyChanged("idKhachHang");
					this.OnidKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDatHang
		{
			get
			{
				return this._NgayDatHang;
			}
			set
			{
				if ((this._NgayDatHang != value))
				{
					this.OnNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayDatHang = value;
					this.SendPropertyChanged("NgayDatHang");
					this.OnNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucGiaoHang", DbType="NVarChar(MAX)")]
		public string HinhThucGiaoHang
		{
			get
			{
				return this._HinhThucGiaoHang;
			}
			set
			{
				if ((this._HinhThucGiaoHang != value))
				{
					this.OnHinhThucGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._HinhThucGiaoHang = value;
					this.SendPropertyChanged("HinhThucGiaoHang");
					this.OnHinhThucGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_ChiTietDDH", Storage="_ChiTietDDHs", ThisKey="idDDH", OtherKey="idDDH")]
		public EntitySet<ChiTietDDH> ChiTietDDHs
		{
			get
			{
				return this._ChiTietDDHs;
			}
			set
			{
				this._ChiTietDDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_KhachHang", ThisKey="idKhachHang", OtherKey="idKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonDatHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs.Add(this);
						this._idKhachHang = value.idKH;
					}
					else
					{
						this._idKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDDHs(ChiTietDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_ChiTietDDHs(ChiTietDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoHang")]
	public partial class GiaoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private int _MaTinh;
		
		private EntityRef<Tinh> _Tinh;
		
		private EntityRef<NongSan> _NongSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMaTinhChanging(int value);
    partial void OnMaTinhChanged();
    #endregion
		
		public GiaoHang()
		{
			this._Tinh = default(EntityRef<Tinh>);
			this._NongSan = default(EntityRef<NongSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._NongSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTinh
		{
			get
			{
				return this._MaTinh;
			}
			set
			{
				if ((this._MaTinh != value))
				{
					if (this._Tinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhChanging(value);
					this.SendPropertyChanging();
					this._MaTinh = value;
					this.SendPropertyChanged("MaTinh");
					this.OnMaTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tinh_GiaoHang", Storage="_Tinh", ThisKey="MaTinh", OtherKey="MaTinh", IsForeignKey=true)]
		public Tinh Tinh
		{
			get
			{
				return this._Tinh.Entity;
			}
			set
			{
				Tinh previousValue = this._Tinh.Entity;
				if (((previousValue != value) 
							|| (this._Tinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tinh.Entity = null;
						previousValue.GiaoHangs.Remove(this);
					}
					this._Tinh.Entity = value;
					if ((value != null))
					{
						value.GiaoHangs.Add(this);
						this._MaTinh = value.MaTinh;
					}
					else
					{
						this._MaTinh = default(int);
					}
					this.SendPropertyChanged("Tinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NongSan_GiaoHang", Storage="_NongSan", ThisKey="MaSP", OtherKey="idSP", IsForeignKey=true)]
		public NongSan NongSan
		{
			get
			{
				return this._NongSan.Entity;
			}
			set
			{
				NongSan previousValue = this._NongSan.Entity;
				if (((previousValue != value) 
							|| (this._NongSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NongSan.Entity = null;
						previousValue.GiaoHangs.Remove(this);
					}
					this._NongSan.Entity = value;
					if ((value != null))
					{
						value.GiaoHangs.Add(this);
						this._MaSP = value.idSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("NongSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idKH;
		
		private string _TenKH;
		
		private string _DienThoai;
		
		private string _MatKhau;
		
		private System.Nullable<bool> _GioiTinh;
		
		private string _DiaChi;
		
		private EntitySet<DonDatHang> _DonDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidKHChanging(int value);
    partial void OnidKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonDatHangs = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs), new Action<DonDatHang>(this.detach_DonDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idKH
		{
			get
			{
				return this._idKH;
			}
			set
			{
				if ((this._idKH != value))
				{
					this.OnidKHChanging(value);
					this.SendPropertyChanging();
					this._idKH = value;
					this.SendPropertyChanged("idKH");
					this.OnidKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(MAX)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(50)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_DonDatHangs", ThisKey="idKH", OtherKey="idKhachHang")]
		public EntitySet<DonDatHang> DonDatHangs
		{
			get
			{
				return this._DonDatHangs;
			}
			set
			{
				this._DonDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loai")]
	public partial class Loai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private System.Nullable<int> _MaDanhMuc;
		
		private EntitySet<NongSan> _NongSans;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnMaDanhMucChanging(System.Nullable<int> value);
    partial void OnMaDanhMucChanged();
    #endregion
		
		public Loai()
		{
			this._NongSans = new EntitySet<NongSan>(new Action<NongSan>(this.attach_NongSans), new Action<NongSan>(this.detach_NongSans));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(MAX)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMuc", DbType="Int")]
		public System.Nullable<int> MaDanhMuc
		{
			get
			{
				return this._MaDanhMuc;
			}
			set
			{
				if ((this._MaDanhMuc != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMuc = value;
					this.SendPropertyChanged("MaDanhMuc");
					this.OnMaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_NongSan", Storage="_NongSans", ThisKey="MaLoai", OtherKey="MaLoaiSP")]
		public EntitySet<NongSan> NongSans
		{
			get
			{
				return this._NongSans;
			}
			set
			{
				this._NongSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Loai", Storage="_DanhMuc", ThisKey="MaDanhMuc", OtherKey="MaDanhMuc", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.Loais.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.Loais.Add(this);
						this._MaDanhMuc = value.MaDanhMuc;
					}
					else
					{
						this._MaDanhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NongSans(NongSan entity)
		{
			this.SendPropertyChanging();
			entity.Loai = this;
		}
		
		private void detach_NongSans(NongSan entity)
		{
			this.SendPropertyChanging();
			entity.Loai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NongSan")]
	public partial class NongSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idSP;
		
		private string _TenSP;
		
		private decimal _DonGia;
		
		private string _HinhDaiDien;
		
		private string _DSHinh;
		
		private System.Nullable<bool> _MienPhiGiaoHang;
		
		private string _NhaSanXuat;
		
		private string _MoTa;
		
		private System.Nullable<int> _MaLoaiSP;
		
		private EntitySet<ChiTietDDH> _ChiTietDDHs;
		
		private EntitySet<GiaoHang> _GiaoHangs;
		
		private EntityRef<Loai> _Loai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSPChanging(string value);
    partial void OnidSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    partial void OnHinhDaiDienChanging(string value);
    partial void OnHinhDaiDienChanged();
    partial void OnDSHinhChanging(string value);
    partial void OnDSHinhChanged();
    partial void OnMienPhiGiaoHangChanging(System.Nullable<bool> value);
    partial void OnMienPhiGiaoHangChanged();
    partial void OnNhaSanXuatChanging(string value);
    partial void OnNhaSanXuatChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnMaLoaiSPChanging(System.Nullable<int> value);
    partial void OnMaLoaiSPChanged();
    #endregion
		
		public NongSan()
		{
			this._ChiTietDDHs = new EntitySet<ChiTietDDH>(new Action<ChiTietDDH>(this.attach_ChiTietDDHs), new Action<ChiTietDDH>(this.detach_ChiTietDDHs));
			this._GiaoHangs = new EntitySet<GiaoHang>(new Action<GiaoHang>(this.attach_GiaoHangs), new Action<GiaoHang>(this.detach_GiaoHangs));
			this._Loai = default(EntityRef<Loai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idSP
		{
			get
			{
				return this._idSP;
			}
			set
			{
				if ((this._idSP != value))
				{
					this.OnidSPChanging(value);
					this.SendPropertyChanging();
					this._idSP = value;
					this.SendPropertyChanged("idSP");
					this.OnidSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(MAX)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,0) NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhDaiDien", DbType="NVarChar(MAX)")]
		public string HinhDaiDien
		{
			get
			{
				return this._HinhDaiDien;
			}
			set
			{
				if ((this._HinhDaiDien != value))
				{
					this.OnHinhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._HinhDaiDien = value;
					this.SendPropertyChanged("HinhDaiDien");
					this.OnHinhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSHinh", DbType="NVarChar(MAX)")]
		public string DSHinh
		{
			get
			{
				return this._DSHinh;
			}
			set
			{
				if ((this._DSHinh != value))
				{
					this.OnDSHinhChanging(value);
					this.SendPropertyChanging();
					this._DSHinh = value;
					this.SendPropertyChanged("DSHinh");
					this.OnDSHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MienPhiGiaoHang", DbType="Bit")]
		public System.Nullable<bool> MienPhiGiaoHang
		{
			get
			{
				return this._MienPhiGiaoHang;
			}
			set
			{
				if ((this._MienPhiGiaoHang != value))
				{
					this.OnMienPhiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._MienPhiGiaoHang = value;
					this.SendPropertyChanged("MienPhiGiaoHang");
					this.OnMienPhiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaSanXuat", DbType="NVarChar(MAX)")]
		public string NhaSanXuat
		{
			get
			{
				return this._NhaSanXuat;
			}
			set
			{
				if ((this._NhaSanXuat != value))
				{
					this.OnNhaSanXuatChanging(value);
					this.SendPropertyChanging();
					this._NhaSanXuat = value;
					this.SendPropertyChanged("NhaSanXuat");
					this.OnNhaSanXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Int")]
		public System.Nullable<int> MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._Loai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NongSan_ChiTietDDH", Storage="_ChiTietDDHs", ThisKey="idSP", OtherKey="idSP")]
		public EntitySet<ChiTietDDH> ChiTietDDHs
		{
			get
			{
				return this._ChiTietDDHs;
			}
			set
			{
				this._ChiTietDDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NongSan_GiaoHang", Storage="_GiaoHangs", ThisKey="idSP", OtherKey="MaSP")]
		public EntitySet<GiaoHang> GiaoHangs
		{
			get
			{
				return this._GiaoHangs;
			}
			set
			{
				this._GiaoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_NongSan", Storage="_Loai", ThisKey="MaLoaiSP", OtherKey="MaLoai", IsForeignKey=true)]
		public Loai Loai
		{
			get
			{
				return this._Loai.Entity;
			}
			set
			{
				Loai previousValue = this._Loai.Entity;
				if (((previousValue != value) 
							|| (this._Loai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai.Entity = null;
						previousValue.NongSans.Remove(this);
					}
					this._Loai.Entity = value;
					if ((value != null))
					{
						value.NongSans.Add(this);
						this._MaLoaiSP = value.MaLoai;
					}
					else
					{
						this._MaLoaiSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDDHs(ChiTietDDH entity)
		{
			this.SendPropertyChanging();
			entity.NongSan = this;
		}
		
		private void detach_ChiTietDDHs(ChiTietDDH entity)
		{
			this.SendPropertyChanging();
			entity.NongSan = null;
		}
		
		private void attach_GiaoHangs(GiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.NongSan = this;
		}
		
		private void detach_GiaoHangs(GiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.NongSan = null;
		}
	}
}
#pragma warning restore 1591
